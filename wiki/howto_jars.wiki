#summary Adding Jars to the ClassPath.

= Adding Jars to the ClassPath =

If you need to add jars to your application it has to be done at the server level.  While applications to have their own classloader, they don't have the ability to load their own jars.  So all applications running under a EasyGSP instance share all of the same jars.

To add a 


This may sound odd to Java developers, but it's really not unusual.  Let's say you were running your PHP shopping cart on a hosted server.  You realize you want to move to something like Magneto, but you didn't noticed your hosting server did not have mcrypt installed.  Well, you wouldn't be able to install it yourself; either the hosting provider would have to install it or you'd have to switch providers.  

The point is, it's not unusual to not have full access to install whatever you want in a hosted shared environment.  It's assumed and hoped that EasyGSP used in shared, hosted environment, hence the available jars to the server limited by what the server administrator make available. 

For example, maybe a server admin will decide that making Hibernate available results in too much memory consumption and simply doesn't make this library available.  There's a reason why something like Hibernate or Threads is not supported in GAE